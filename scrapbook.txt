def create_data_quality_dashboard(df):
    """Create interactive data quality dashboard"""
    
    # Missing values analysis
    missing_data = pd.DataFrame({
        'Column': df.columns,
        'Missing_Count': df.isnull().sum(),
        'Missing_Percentage': (df.isnull().sum() / len(df)) * 100,
        'Data_Type': df.dtypes
    }).sort_values('Missing_Percentage', ascending=False)
    
    # Create subplots with proper specs
    fig = make_subplots(
        rows=2, cols=2,
        subplot_titles=('Missing Values by Column', 'Data Type Distribution', 
                       'Missing Values Heatmap', 'Data Completeness'),
        specs=[[{"secondary_y": False}, {"secondary_y": False}],
               [{"secondary_y": False}, {"secondary_y": False}]]
    )
    
    # Missing values bar chart
    fig.add_trace(
        go.Bar(x=missing_data['Column'], y=missing_data['Missing_Percentage'],
               name='Missing %', marker_color='red', opacity=0.7),
        row=1, col=1
    )
    
    # Data type distribution - Changed to bar chart to avoid pie chart compatibility issues
    dtype_counts = df.dtypes.value_counts()
    fig.add_trace(
        go.Bar(x=dtype_counts.index.astype(str), y=dtype_counts.values,
               name='Data Types', marker_color='lightblue', opacity=0.7),
        row=1, col=2
    )
    
    # Missing values heatmap (sample)
    sample_df = df.head(100)  # Sample for visualization
    missing_matrix = sample_df.isnull().astype(int)
    
    fig.add_trace(
        go.Heatmap(z=missing_matrix.values.T, 
                   y=missing_matrix.columns,
                   colorscale='Reds',
                   showscale=False,
                   name='Missing Pattern'),
        row=2, col=1
    )
    
    # Completeness score
    completeness = (1 - df.isnull().sum() / len(df)) * 100
    fig.add_trace(
        go.Bar(x=completeness.index, y=completeness.values,
               name='Completeness %', marker_color='green', opacity=0.7),
        row=2, col=2
    )
    
    # Update layout and axis labels
    fig.update_xaxes(title_text="Columns", row=1, col=1)
    fig.update_yaxes(title_text="Missing %", row=1, col=1)
    fig.update_xaxes(title_text="Data Types", row=1, col=2)
    fig.update_yaxes(title_text="Count", row=1, col=2)
    fig.update_xaxes(title_text="Row Index", row=2, col=1)
    fig.update_yaxes(title_text="Columns", row=2, col=1)
    fig.update_xaxes(title_text="Columns", row=2, col=2)
    fig.update_yaxes(title_text="Completeness %", row=2, col=2)
    
    # Rotate x-axis labels for better readability
    fig.update_xaxes(tickangle=45, row=1, col=1)
    fig.update_xaxes(tickangle=45, row=1, col=2)
    fig.update_xaxes(tickangle=45, row=2, col=2)
    
    fig.update_layout(height=800, showlegend=False, title_text="Data Quality Dashboard")
    fig.show()
    
    # Create separate pie chart for data types (since it couldn't fit in subplot)
    print("\nðŸ“Š Data Types Distribution (Pie Chart):")
    fig_pie = px.pie(values=dtype_counts.values, names=dtype_counts.index.astype(str), 
                     title="Data Types Distribution")
    fig_pie.show()
    
    # Display missing data table
    print("\nðŸ“‹ Missing Values Summary Table:")
    display(missing_data)
    
    # Get Claude's insights on data quality
    if analyzer.client_available:
        print(f"\nðŸ¤– Claude's Data Quality Assessment:")
        print("-" * 40)
        
        quality_prompt = f"""
        Based on this missing values analysis:
        {missing_data.to_string()}
        
        What are the main data quality issues? What recommendations do you have for handling missing values?
        Which columns should I be most concerned about?
        """
        
        quality_insights = analyzer.get_claude_insights(quality_prompt)
        display(Markdown(quality_insights))
        analyzer.ai_insights['data_quality'] = quality_insights
    
    return missing_data
